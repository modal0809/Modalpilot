#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.10.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_622721346943683685) {
   out_622721346943683685[0] = 0;
   out_622721346943683685[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_622721346943683685[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_622721346943683685[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_622721346943683685[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_622721346943683685[5] = -sin(in_vec[1]);
   out_622721346943683685[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_622721346943683685[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_622721346943683685[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_622721346943683685[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_622721346943683685[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_622721346943683685[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_622721346943683685[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_622721346943683685[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_622721346943683685[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_622721346943683685[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_622721346943683685[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_622721346943683685[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_773547643175572684) {
   out_773547643175572684[0] = delta_x[0] + nom_x[0];
   out_773547643175572684[1] = delta_x[1] + nom_x[1];
   out_773547643175572684[2] = delta_x[2] + nom_x[2];
   out_773547643175572684[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_773547643175572684[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_773547643175572684[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_773547643175572684[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_773547643175572684[7] = delta_x[6] + nom_x[7];
   out_773547643175572684[8] = delta_x[7] + nom_x[8];
   out_773547643175572684[9] = delta_x[8] + nom_x[9];
   out_773547643175572684[10] = delta_x[9] + nom_x[10];
   out_773547643175572684[11] = delta_x[10] + nom_x[11];
   out_773547643175572684[12] = delta_x[11] + nom_x[12];
   out_773547643175572684[13] = delta_x[12] + nom_x[13];
   out_773547643175572684[14] = delta_x[13] + nom_x[14];
   out_773547643175572684[15] = delta_x[14] + nom_x[15];
   out_773547643175572684[16] = delta_x[15] + nom_x[16];
   out_773547643175572684[17] = delta_x[16] + nom_x[17];
   out_773547643175572684[18] = delta_x[17] + nom_x[18];
   out_773547643175572684[19] = delta_x[18] + nom_x[19];
   out_773547643175572684[20] = delta_x[19] + nom_x[20];
   out_773547643175572684[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5115024931453247445) {
   out_5115024931453247445[0] = -nom_x[0] + true_x[0];
   out_5115024931453247445[1] = -nom_x[1] + true_x[1];
   out_5115024931453247445[2] = -nom_x[2] + true_x[2];
   out_5115024931453247445[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5115024931453247445[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5115024931453247445[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5115024931453247445[6] = -nom_x[7] + true_x[7];
   out_5115024931453247445[7] = -nom_x[8] + true_x[8];
   out_5115024931453247445[8] = -nom_x[9] + true_x[9];
   out_5115024931453247445[9] = -nom_x[10] + true_x[10];
   out_5115024931453247445[10] = -nom_x[11] + true_x[11];
   out_5115024931453247445[11] = -nom_x[12] + true_x[12];
   out_5115024931453247445[12] = -nom_x[13] + true_x[13];
   out_5115024931453247445[13] = -nom_x[14] + true_x[14];
   out_5115024931453247445[14] = -nom_x[15] + true_x[15];
   out_5115024931453247445[15] = -nom_x[16] + true_x[16];
   out_5115024931453247445[16] = -nom_x[17] + true_x[17];
   out_5115024931453247445[17] = -nom_x[18] + true_x[18];
   out_5115024931453247445[18] = -nom_x[19] + true_x[19];
   out_5115024931453247445[19] = -nom_x[20] + true_x[20];
   out_5115024931453247445[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2117137093686112568) {
   out_2117137093686112568[0] = 1.0;
   out_2117137093686112568[1] = 0;
   out_2117137093686112568[2] = 0;
   out_2117137093686112568[3] = 0;
   out_2117137093686112568[4] = 0;
   out_2117137093686112568[5] = 0;
   out_2117137093686112568[6] = 0;
   out_2117137093686112568[7] = 0;
   out_2117137093686112568[8] = 0;
   out_2117137093686112568[9] = 0;
   out_2117137093686112568[10] = 0;
   out_2117137093686112568[11] = 0;
   out_2117137093686112568[12] = 0;
   out_2117137093686112568[13] = 0;
   out_2117137093686112568[14] = 0;
   out_2117137093686112568[15] = 0;
   out_2117137093686112568[16] = 0;
   out_2117137093686112568[17] = 0;
   out_2117137093686112568[18] = 0;
   out_2117137093686112568[19] = 0;
   out_2117137093686112568[20] = 0;
   out_2117137093686112568[21] = 0;
   out_2117137093686112568[22] = 1.0;
   out_2117137093686112568[23] = 0;
   out_2117137093686112568[24] = 0;
   out_2117137093686112568[25] = 0;
   out_2117137093686112568[26] = 0;
   out_2117137093686112568[27] = 0;
   out_2117137093686112568[28] = 0;
   out_2117137093686112568[29] = 0;
   out_2117137093686112568[30] = 0;
   out_2117137093686112568[31] = 0;
   out_2117137093686112568[32] = 0;
   out_2117137093686112568[33] = 0;
   out_2117137093686112568[34] = 0;
   out_2117137093686112568[35] = 0;
   out_2117137093686112568[36] = 0;
   out_2117137093686112568[37] = 0;
   out_2117137093686112568[38] = 0;
   out_2117137093686112568[39] = 0;
   out_2117137093686112568[40] = 0;
   out_2117137093686112568[41] = 0;
   out_2117137093686112568[42] = 0;
   out_2117137093686112568[43] = 0;
   out_2117137093686112568[44] = 1.0;
   out_2117137093686112568[45] = 0;
   out_2117137093686112568[46] = 0;
   out_2117137093686112568[47] = 0;
   out_2117137093686112568[48] = 0;
   out_2117137093686112568[49] = 0;
   out_2117137093686112568[50] = 0;
   out_2117137093686112568[51] = 0;
   out_2117137093686112568[52] = 0;
   out_2117137093686112568[53] = 0;
   out_2117137093686112568[54] = 0;
   out_2117137093686112568[55] = 0;
   out_2117137093686112568[56] = 0;
   out_2117137093686112568[57] = 0;
   out_2117137093686112568[58] = 0;
   out_2117137093686112568[59] = 0;
   out_2117137093686112568[60] = 0;
   out_2117137093686112568[61] = 0;
   out_2117137093686112568[62] = 0;
   out_2117137093686112568[63] = 0;
   out_2117137093686112568[64] = 0;
   out_2117137093686112568[65] = 0;
   out_2117137093686112568[66] = -0.5*state[4];
   out_2117137093686112568[67] = -0.5*state[5];
   out_2117137093686112568[68] = -0.5*state[6];
   out_2117137093686112568[69] = 0;
   out_2117137093686112568[70] = 0;
   out_2117137093686112568[71] = 0;
   out_2117137093686112568[72] = 0;
   out_2117137093686112568[73] = 0;
   out_2117137093686112568[74] = 0;
   out_2117137093686112568[75] = 0;
   out_2117137093686112568[76] = 0;
   out_2117137093686112568[77] = 0;
   out_2117137093686112568[78] = 0;
   out_2117137093686112568[79] = 0;
   out_2117137093686112568[80] = 0;
   out_2117137093686112568[81] = 0;
   out_2117137093686112568[82] = 0;
   out_2117137093686112568[83] = 0;
   out_2117137093686112568[84] = 0;
   out_2117137093686112568[85] = 0;
   out_2117137093686112568[86] = 0;
   out_2117137093686112568[87] = 0.5*state[3];
   out_2117137093686112568[88] = 0.5*state[6];
   out_2117137093686112568[89] = -0.5*state[5];
   out_2117137093686112568[90] = 0;
   out_2117137093686112568[91] = 0;
   out_2117137093686112568[92] = 0;
   out_2117137093686112568[93] = 0;
   out_2117137093686112568[94] = 0;
   out_2117137093686112568[95] = 0;
   out_2117137093686112568[96] = 0;
   out_2117137093686112568[97] = 0;
   out_2117137093686112568[98] = 0;
   out_2117137093686112568[99] = 0;
   out_2117137093686112568[100] = 0;
   out_2117137093686112568[101] = 0;
   out_2117137093686112568[102] = 0;
   out_2117137093686112568[103] = 0;
   out_2117137093686112568[104] = 0;
   out_2117137093686112568[105] = 0;
   out_2117137093686112568[106] = 0;
   out_2117137093686112568[107] = 0;
   out_2117137093686112568[108] = -0.5*state[6];
   out_2117137093686112568[109] = 0.5*state[3];
   out_2117137093686112568[110] = 0.5*state[4];
   out_2117137093686112568[111] = 0;
   out_2117137093686112568[112] = 0;
   out_2117137093686112568[113] = 0;
   out_2117137093686112568[114] = 0;
   out_2117137093686112568[115] = 0;
   out_2117137093686112568[116] = 0;
   out_2117137093686112568[117] = 0;
   out_2117137093686112568[118] = 0;
   out_2117137093686112568[119] = 0;
   out_2117137093686112568[120] = 0;
   out_2117137093686112568[121] = 0;
   out_2117137093686112568[122] = 0;
   out_2117137093686112568[123] = 0;
   out_2117137093686112568[124] = 0;
   out_2117137093686112568[125] = 0;
   out_2117137093686112568[126] = 0;
   out_2117137093686112568[127] = 0;
   out_2117137093686112568[128] = 0;
   out_2117137093686112568[129] = 0.5*state[5];
   out_2117137093686112568[130] = -0.5*state[4];
   out_2117137093686112568[131] = 0.5*state[3];
   out_2117137093686112568[132] = 0;
   out_2117137093686112568[133] = 0;
   out_2117137093686112568[134] = 0;
   out_2117137093686112568[135] = 0;
   out_2117137093686112568[136] = 0;
   out_2117137093686112568[137] = 0;
   out_2117137093686112568[138] = 0;
   out_2117137093686112568[139] = 0;
   out_2117137093686112568[140] = 0;
   out_2117137093686112568[141] = 0;
   out_2117137093686112568[142] = 0;
   out_2117137093686112568[143] = 0;
   out_2117137093686112568[144] = 0;
   out_2117137093686112568[145] = 0;
   out_2117137093686112568[146] = 0;
   out_2117137093686112568[147] = 0;
   out_2117137093686112568[148] = 0;
   out_2117137093686112568[149] = 0;
   out_2117137093686112568[150] = 0;
   out_2117137093686112568[151] = 0;
   out_2117137093686112568[152] = 0;
   out_2117137093686112568[153] = 1.0;
   out_2117137093686112568[154] = 0;
   out_2117137093686112568[155] = 0;
   out_2117137093686112568[156] = 0;
   out_2117137093686112568[157] = 0;
   out_2117137093686112568[158] = 0;
   out_2117137093686112568[159] = 0;
   out_2117137093686112568[160] = 0;
   out_2117137093686112568[161] = 0;
   out_2117137093686112568[162] = 0;
   out_2117137093686112568[163] = 0;
   out_2117137093686112568[164] = 0;
   out_2117137093686112568[165] = 0;
   out_2117137093686112568[166] = 0;
   out_2117137093686112568[167] = 0;
   out_2117137093686112568[168] = 0;
   out_2117137093686112568[169] = 0;
   out_2117137093686112568[170] = 0;
   out_2117137093686112568[171] = 0;
   out_2117137093686112568[172] = 0;
   out_2117137093686112568[173] = 0;
   out_2117137093686112568[174] = 0;
   out_2117137093686112568[175] = 1.0;
   out_2117137093686112568[176] = 0;
   out_2117137093686112568[177] = 0;
   out_2117137093686112568[178] = 0;
   out_2117137093686112568[179] = 0;
   out_2117137093686112568[180] = 0;
   out_2117137093686112568[181] = 0;
   out_2117137093686112568[182] = 0;
   out_2117137093686112568[183] = 0;
   out_2117137093686112568[184] = 0;
   out_2117137093686112568[185] = 0;
   out_2117137093686112568[186] = 0;
   out_2117137093686112568[187] = 0;
   out_2117137093686112568[188] = 0;
   out_2117137093686112568[189] = 0;
   out_2117137093686112568[190] = 0;
   out_2117137093686112568[191] = 0;
   out_2117137093686112568[192] = 0;
   out_2117137093686112568[193] = 0;
   out_2117137093686112568[194] = 0;
   out_2117137093686112568[195] = 0;
   out_2117137093686112568[196] = 0;
   out_2117137093686112568[197] = 1.0;
   out_2117137093686112568[198] = 0;
   out_2117137093686112568[199] = 0;
   out_2117137093686112568[200] = 0;
   out_2117137093686112568[201] = 0;
   out_2117137093686112568[202] = 0;
   out_2117137093686112568[203] = 0;
   out_2117137093686112568[204] = 0;
   out_2117137093686112568[205] = 0;
   out_2117137093686112568[206] = 0;
   out_2117137093686112568[207] = 0;
   out_2117137093686112568[208] = 0;
   out_2117137093686112568[209] = 0;
   out_2117137093686112568[210] = 0;
   out_2117137093686112568[211] = 0;
   out_2117137093686112568[212] = 0;
   out_2117137093686112568[213] = 0;
   out_2117137093686112568[214] = 0;
   out_2117137093686112568[215] = 0;
   out_2117137093686112568[216] = 0;
   out_2117137093686112568[217] = 0;
   out_2117137093686112568[218] = 0;
   out_2117137093686112568[219] = 1.0;
   out_2117137093686112568[220] = 0;
   out_2117137093686112568[221] = 0;
   out_2117137093686112568[222] = 0;
   out_2117137093686112568[223] = 0;
   out_2117137093686112568[224] = 0;
   out_2117137093686112568[225] = 0;
   out_2117137093686112568[226] = 0;
   out_2117137093686112568[227] = 0;
   out_2117137093686112568[228] = 0;
   out_2117137093686112568[229] = 0;
   out_2117137093686112568[230] = 0;
   out_2117137093686112568[231] = 0;
   out_2117137093686112568[232] = 0;
   out_2117137093686112568[233] = 0;
   out_2117137093686112568[234] = 0;
   out_2117137093686112568[235] = 0;
   out_2117137093686112568[236] = 0;
   out_2117137093686112568[237] = 0;
   out_2117137093686112568[238] = 0;
   out_2117137093686112568[239] = 0;
   out_2117137093686112568[240] = 0;
   out_2117137093686112568[241] = 1.0;
   out_2117137093686112568[242] = 0;
   out_2117137093686112568[243] = 0;
   out_2117137093686112568[244] = 0;
   out_2117137093686112568[245] = 0;
   out_2117137093686112568[246] = 0;
   out_2117137093686112568[247] = 0;
   out_2117137093686112568[248] = 0;
   out_2117137093686112568[249] = 0;
   out_2117137093686112568[250] = 0;
   out_2117137093686112568[251] = 0;
   out_2117137093686112568[252] = 0;
   out_2117137093686112568[253] = 0;
   out_2117137093686112568[254] = 0;
   out_2117137093686112568[255] = 0;
   out_2117137093686112568[256] = 0;
   out_2117137093686112568[257] = 0;
   out_2117137093686112568[258] = 0;
   out_2117137093686112568[259] = 0;
   out_2117137093686112568[260] = 0;
   out_2117137093686112568[261] = 0;
   out_2117137093686112568[262] = 0;
   out_2117137093686112568[263] = 1.0;
   out_2117137093686112568[264] = 0;
   out_2117137093686112568[265] = 0;
   out_2117137093686112568[266] = 0;
   out_2117137093686112568[267] = 0;
   out_2117137093686112568[268] = 0;
   out_2117137093686112568[269] = 0;
   out_2117137093686112568[270] = 0;
   out_2117137093686112568[271] = 0;
   out_2117137093686112568[272] = 0;
   out_2117137093686112568[273] = 0;
   out_2117137093686112568[274] = 0;
   out_2117137093686112568[275] = 0;
   out_2117137093686112568[276] = 0;
   out_2117137093686112568[277] = 0;
   out_2117137093686112568[278] = 0;
   out_2117137093686112568[279] = 0;
   out_2117137093686112568[280] = 0;
   out_2117137093686112568[281] = 0;
   out_2117137093686112568[282] = 0;
   out_2117137093686112568[283] = 0;
   out_2117137093686112568[284] = 0;
   out_2117137093686112568[285] = 1.0;
   out_2117137093686112568[286] = 0;
   out_2117137093686112568[287] = 0;
   out_2117137093686112568[288] = 0;
   out_2117137093686112568[289] = 0;
   out_2117137093686112568[290] = 0;
   out_2117137093686112568[291] = 0;
   out_2117137093686112568[292] = 0;
   out_2117137093686112568[293] = 0;
   out_2117137093686112568[294] = 0;
   out_2117137093686112568[295] = 0;
   out_2117137093686112568[296] = 0;
   out_2117137093686112568[297] = 0;
   out_2117137093686112568[298] = 0;
   out_2117137093686112568[299] = 0;
   out_2117137093686112568[300] = 0;
   out_2117137093686112568[301] = 0;
   out_2117137093686112568[302] = 0;
   out_2117137093686112568[303] = 0;
   out_2117137093686112568[304] = 0;
   out_2117137093686112568[305] = 0;
   out_2117137093686112568[306] = 0;
   out_2117137093686112568[307] = 1.0;
   out_2117137093686112568[308] = 0;
   out_2117137093686112568[309] = 0;
   out_2117137093686112568[310] = 0;
   out_2117137093686112568[311] = 0;
   out_2117137093686112568[312] = 0;
   out_2117137093686112568[313] = 0;
   out_2117137093686112568[314] = 0;
   out_2117137093686112568[315] = 0;
   out_2117137093686112568[316] = 0;
   out_2117137093686112568[317] = 0;
   out_2117137093686112568[318] = 0;
   out_2117137093686112568[319] = 0;
   out_2117137093686112568[320] = 0;
   out_2117137093686112568[321] = 0;
   out_2117137093686112568[322] = 0;
   out_2117137093686112568[323] = 0;
   out_2117137093686112568[324] = 0;
   out_2117137093686112568[325] = 0;
   out_2117137093686112568[326] = 0;
   out_2117137093686112568[327] = 0;
   out_2117137093686112568[328] = 0;
   out_2117137093686112568[329] = 1.0;
   out_2117137093686112568[330] = 0;
   out_2117137093686112568[331] = 0;
   out_2117137093686112568[332] = 0;
   out_2117137093686112568[333] = 0;
   out_2117137093686112568[334] = 0;
   out_2117137093686112568[335] = 0;
   out_2117137093686112568[336] = 0;
   out_2117137093686112568[337] = 0;
   out_2117137093686112568[338] = 0;
   out_2117137093686112568[339] = 0;
   out_2117137093686112568[340] = 0;
   out_2117137093686112568[341] = 0;
   out_2117137093686112568[342] = 0;
   out_2117137093686112568[343] = 0;
   out_2117137093686112568[344] = 0;
   out_2117137093686112568[345] = 0;
   out_2117137093686112568[346] = 0;
   out_2117137093686112568[347] = 0;
   out_2117137093686112568[348] = 0;
   out_2117137093686112568[349] = 0;
   out_2117137093686112568[350] = 0;
   out_2117137093686112568[351] = 1.0;
   out_2117137093686112568[352] = 0;
   out_2117137093686112568[353] = 0;
   out_2117137093686112568[354] = 0;
   out_2117137093686112568[355] = 0;
   out_2117137093686112568[356] = 0;
   out_2117137093686112568[357] = 0;
   out_2117137093686112568[358] = 0;
   out_2117137093686112568[359] = 0;
   out_2117137093686112568[360] = 0;
   out_2117137093686112568[361] = 0;
   out_2117137093686112568[362] = 0;
   out_2117137093686112568[363] = 0;
   out_2117137093686112568[364] = 0;
   out_2117137093686112568[365] = 0;
   out_2117137093686112568[366] = 0;
   out_2117137093686112568[367] = 0;
   out_2117137093686112568[368] = 0;
   out_2117137093686112568[369] = 0;
   out_2117137093686112568[370] = 0;
   out_2117137093686112568[371] = 0;
   out_2117137093686112568[372] = 0;
   out_2117137093686112568[373] = 1.0;
   out_2117137093686112568[374] = 0;
   out_2117137093686112568[375] = 0;
   out_2117137093686112568[376] = 0;
   out_2117137093686112568[377] = 0;
   out_2117137093686112568[378] = 0;
   out_2117137093686112568[379] = 0;
   out_2117137093686112568[380] = 0;
   out_2117137093686112568[381] = 0;
   out_2117137093686112568[382] = 0;
   out_2117137093686112568[383] = 0;
   out_2117137093686112568[384] = 0;
   out_2117137093686112568[385] = 0;
   out_2117137093686112568[386] = 0;
   out_2117137093686112568[387] = 0;
   out_2117137093686112568[388] = 0;
   out_2117137093686112568[389] = 0;
   out_2117137093686112568[390] = 0;
   out_2117137093686112568[391] = 0;
   out_2117137093686112568[392] = 0;
   out_2117137093686112568[393] = 0;
   out_2117137093686112568[394] = 0;
   out_2117137093686112568[395] = 1.0;
   out_2117137093686112568[396] = 0;
   out_2117137093686112568[397] = 0;
   out_2117137093686112568[398] = 0;
   out_2117137093686112568[399] = 0;
   out_2117137093686112568[400] = 0;
   out_2117137093686112568[401] = 0;
   out_2117137093686112568[402] = 0;
   out_2117137093686112568[403] = 0;
   out_2117137093686112568[404] = 0;
   out_2117137093686112568[405] = 0;
   out_2117137093686112568[406] = 0;
   out_2117137093686112568[407] = 0;
   out_2117137093686112568[408] = 0;
   out_2117137093686112568[409] = 0;
   out_2117137093686112568[410] = 0;
   out_2117137093686112568[411] = 0;
   out_2117137093686112568[412] = 0;
   out_2117137093686112568[413] = 0;
   out_2117137093686112568[414] = 0;
   out_2117137093686112568[415] = 0;
   out_2117137093686112568[416] = 0;
   out_2117137093686112568[417] = 1.0;
   out_2117137093686112568[418] = 0;
   out_2117137093686112568[419] = 0;
   out_2117137093686112568[420] = 0;
   out_2117137093686112568[421] = 0;
   out_2117137093686112568[422] = 0;
   out_2117137093686112568[423] = 0;
   out_2117137093686112568[424] = 0;
   out_2117137093686112568[425] = 0;
   out_2117137093686112568[426] = 0;
   out_2117137093686112568[427] = 0;
   out_2117137093686112568[428] = 0;
   out_2117137093686112568[429] = 0;
   out_2117137093686112568[430] = 0;
   out_2117137093686112568[431] = 0;
   out_2117137093686112568[432] = 0;
   out_2117137093686112568[433] = 0;
   out_2117137093686112568[434] = 0;
   out_2117137093686112568[435] = 0;
   out_2117137093686112568[436] = 0;
   out_2117137093686112568[437] = 0;
   out_2117137093686112568[438] = 0;
   out_2117137093686112568[439] = 1.0;
   out_2117137093686112568[440] = 0;
   out_2117137093686112568[441] = 0;
   out_2117137093686112568[442] = 0;
   out_2117137093686112568[443] = 0;
   out_2117137093686112568[444] = 0;
   out_2117137093686112568[445] = 0;
   out_2117137093686112568[446] = 0;
   out_2117137093686112568[447] = 0;
   out_2117137093686112568[448] = 0;
   out_2117137093686112568[449] = 0;
   out_2117137093686112568[450] = 0;
   out_2117137093686112568[451] = 0;
   out_2117137093686112568[452] = 0;
   out_2117137093686112568[453] = 0;
   out_2117137093686112568[454] = 0;
   out_2117137093686112568[455] = 0;
   out_2117137093686112568[456] = 0;
   out_2117137093686112568[457] = 0;
   out_2117137093686112568[458] = 0;
   out_2117137093686112568[459] = 0;
   out_2117137093686112568[460] = 0;
   out_2117137093686112568[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3393411830256892093) {
   out_3393411830256892093[0] = dt*state[7] + state[0];
   out_3393411830256892093[1] = dt*state[8] + state[1];
   out_3393411830256892093[2] = dt*state[9] + state[2];
   out_3393411830256892093[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3393411830256892093[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3393411830256892093[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3393411830256892093[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3393411830256892093[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3393411830256892093[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3393411830256892093[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3393411830256892093[10] = state[10];
   out_3393411830256892093[11] = state[11];
   out_3393411830256892093[12] = state[12];
   out_3393411830256892093[13] = state[13];
   out_3393411830256892093[14] = state[14];
   out_3393411830256892093[15] = state[15];
   out_3393411830256892093[16] = state[16];
   out_3393411830256892093[17] = state[17];
   out_3393411830256892093[18] = state[18];
   out_3393411830256892093[19] = state[19];
   out_3393411830256892093[20] = state[20];
   out_3393411830256892093[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7303582802215372833) {
   out_7303582802215372833[0] = 1;
   out_7303582802215372833[1] = 0;
   out_7303582802215372833[2] = 0;
   out_7303582802215372833[3] = 0;
   out_7303582802215372833[4] = 0;
   out_7303582802215372833[5] = 0;
   out_7303582802215372833[6] = dt;
   out_7303582802215372833[7] = 0;
   out_7303582802215372833[8] = 0;
   out_7303582802215372833[9] = 0;
   out_7303582802215372833[10] = 0;
   out_7303582802215372833[11] = 0;
   out_7303582802215372833[12] = 0;
   out_7303582802215372833[13] = 0;
   out_7303582802215372833[14] = 0;
   out_7303582802215372833[15] = 0;
   out_7303582802215372833[16] = 0;
   out_7303582802215372833[17] = 0;
   out_7303582802215372833[18] = 0;
   out_7303582802215372833[19] = 0;
   out_7303582802215372833[20] = 0;
   out_7303582802215372833[21] = 0;
   out_7303582802215372833[22] = 1;
   out_7303582802215372833[23] = 0;
   out_7303582802215372833[24] = 0;
   out_7303582802215372833[25] = 0;
   out_7303582802215372833[26] = 0;
   out_7303582802215372833[27] = 0;
   out_7303582802215372833[28] = dt;
   out_7303582802215372833[29] = 0;
   out_7303582802215372833[30] = 0;
   out_7303582802215372833[31] = 0;
   out_7303582802215372833[32] = 0;
   out_7303582802215372833[33] = 0;
   out_7303582802215372833[34] = 0;
   out_7303582802215372833[35] = 0;
   out_7303582802215372833[36] = 0;
   out_7303582802215372833[37] = 0;
   out_7303582802215372833[38] = 0;
   out_7303582802215372833[39] = 0;
   out_7303582802215372833[40] = 0;
   out_7303582802215372833[41] = 0;
   out_7303582802215372833[42] = 0;
   out_7303582802215372833[43] = 0;
   out_7303582802215372833[44] = 1;
   out_7303582802215372833[45] = 0;
   out_7303582802215372833[46] = 0;
   out_7303582802215372833[47] = 0;
   out_7303582802215372833[48] = 0;
   out_7303582802215372833[49] = 0;
   out_7303582802215372833[50] = dt;
   out_7303582802215372833[51] = 0;
   out_7303582802215372833[52] = 0;
   out_7303582802215372833[53] = 0;
   out_7303582802215372833[54] = 0;
   out_7303582802215372833[55] = 0;
   out_7303582802215372833[56] = 0;
   out_7303582802215372833[57] = 0;
   out_7303582802215372833[58] = 0;
   out_7303582802215372833[59] = 0;
   out_7303582802215372833[60] = 0;
   out_7303582802215372833[61] = 0;
   out_7303582802215372833[62] = 0;
   out_7303582802215372833[63] = 0;
   out_7303582802215372833[64] = 0;
   out_7303582802215372833[65] = 0;
   out_7303582802215372833[66] = 1;
   out_7303582802215372833[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7303582802215372833[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7303582802215372833[69] = 0;
   out_7303582802215372833[70] = 0;
   out_7303582802215372833[71] = 0;
   out_7303582802215372833[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7303582802215372833[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7303582802215372833[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7303582802215372833[75] = 0;
   out_7303582802215372833[76] = 0;
   out_7303582802215372833[77] = 0;
   out_7303582802215372833[78] = 0;
   out_7303582802215372833[79] = 0;
   out_7303582802215372833[80] = 0;
   out_7303582802215372833[81] = 0;
   out_7303582802215372833[82] = 0;
   out_7303582802215372833[83] = 0;
   out_7303582802215372833[84] = 0;
   out_7303582802215372833[85] = 0;
   out_7303582802215372833[86] = 0;
   out_7303582802215372833[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7303582802215372833[88] = 1;
   out_7303582802215372833[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7303582802215372833[90] = 0;
   out_7303582802215372833[91] = 0;
   out_7303582802215372833[92] = 0;
   out_7303582802215372833[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7303582802215372833[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7303582802215372833[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7303582802215372833[96] = 0;
   out_7303582802215372833[97] = 0;
   out_7303582802215372833[98] = 0;
   out_7303582802215372833[99] = 0;
   out_7303582802215372833[100] = 0;
   out_7303582802215372833[101] = 0;
   out_7303582802215372833[102] = 0;
   out_7303582802215372833[103] = 0;
   out_7303582802215372833[104] = 0;
   out_7303582802215372833[105] = 0;
   out_7303582802215372833[106] = 0;
   out_7303582802215372833[107] = 0;
   out_7303582802215372833[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7303582802215372833[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7303582802215372833[110] = 1;
   out_7303582802215372833[111] = 0;
   out_7303582802215372833[112] = 0;
   out_7303582802215372833[113] = 0;
   out_7303582802215372833[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7303582802215372833[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7303582802215372833[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7303582802215372833[117] = 0;
   out_7303582802215372833[118] = 0;
   out_7303582802215372833[119] = 0;
   out_7303582802215372833[120] = 0;
   out_7303582802215372833[121] = 0;
   out_7303582802215372833[122] = 0;
   out_7303582802215372833[123] = 0;
   out_7303582802215372833[124] = 0;
   out_7303582802215372833[125] = 0;
   out_7303582802215372833[126] = 0;
   out_7303582802215372833[127] = 0;
   out_7303582802215372833[128] = 0;
   out_7303582802215372833[129] = 0;
   out_7303582802215372833[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7303582802215372833[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7303582802215372833[132] = 1;
   out_7303582802215372833[133] = 0;
   out_7303582802215372833[134] = 0;
   out_7303582802215372833[135] = 0;
   out_7303582802215372833[136] = 0;
   out_7303582802215372833[137] = 0;
   out_7303582802215372833[138] = 0;
   out_7303582802215372833[139] = 0;
   out_7303582802215372833[140] = 0;
   out_7303582802215372833[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7303582802215372833[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7303582802215372833[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7303582802215372833[144] = 0;
   out_7303582802215372833[145] = 0;
   out_7303582802215372833[146] = 0;
   out_7303582802215372833[147] = 0;
   out_7303582802215372833[148] = 0;
   out_7303582802215372833[149] = 0;
   out_7303582802215372833[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7303582802215372833[151] = 0;
   out_7303582802215372833[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7303582802215372833[153] = 0;
   out_7303582802215372833[154] = 1;
   out_7303582802215372833[155] = 0;
   out_7303582802215372833[156] = 0;
   out_7303582802215372833[157] = 0;
   out_7303582802215372833[158] = 0;
   out_7303582802215372833[159] = 0;
   out_7303582802215372833[160] = 0;
   out_7303582802215372833[161] = 0;
   out_7303582802215372833[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7303582802215372833[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7303582802215372833[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7303582802215372833[165] = 0;
   out_7303582802215372833[166] = 0;
   out_7303582802215372833[167] = 0;
   out_7303582802215372833[168] = 0;
   out_7303582802215372833[169] = 0;
   out_7303582802215372833[170] = 0;
   out_7303582802215372833[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7303582802215372833[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7303582802215372833[173] = 0;
   out_7303582802215372833[174] = 0;
   out_7303582802215372833[175] = 0;
   out_7303582802215372833[176] = 1;
   out_7303582802215372833[177] = 0;
   out_7303582802215372833[178] = 0;
   out_7303582802215372833[179] = 0;
   out_7303582802215372833[180] = 0;
   out_7303582802215372833[181] = 0;
   out_7303582802215372833[182] = 0;
   out_7303582802215372833[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7303582802215372833[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7303582802215372833[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7303582802215372833[186] = 0;
   out_7303582802215372833[187] = 0;
   out_7303582802215372833[188] = 0;
   out_7303582802215372833[189] = 0;
   out_7303582802215372833[190] = 0;
   out_7303582802215372833[191] = 0;
   out_7303582802215372833[192] = 0;
   out_7303582802215372833[193] = 0;
   out_7303582802215372833[194] = 0;
   out_7303582802215372833[195] = 0;
   out_7303582802215372833[196] = 0;
   out_7303582802215372833[197] = 0;
   out_7303582802215372833[198] = 1;
   out_7303582802215372833[199] = 0;
   out_7303582802215372833[200] = 0;
   out_7303582802215372833[201] = 0;
   out_7303582802215372833[202] = 0;
   out_7303582802215372833[203] = 0;
   out_7303582802215372833[204] = 0;
   out_7303582802215372833[205] = 0;
   out_7303582802215372833[206] = 0;
   out_7303582802215372833[207] = 0;
   out_7303582802215372833[208] = 0;
   out_7303582802215372833[209] = 0;
   out_7303582802215372833[210] = 0;
   out_7303582802215372833[211] = 0;
   out_7303582802215372833[212] = 0;
   out_7303582802215372833[213] = 0;
   out_7303582802215372833[214] = 0;
   out_7303582802215372833[215] = 0;
   out_7303582802215372833[216] = 0;
   out_7303582802215372833[217] = 0;
   out_7303582802215372833[218] = 0;
   out_7303582802215372833[219] = 0;
   out_7303582802215372833[220] = 1;
   out_7303582802215372833[221] = 0;
   out_7303582802215372833[222] = 0;
   out_7303582802215372833[223] = 0;
   out_7303582802215372833[224] = 0;
   out_7303582802215372833[225] = 0;
   out_7303582802215372833[226] = 0;
   out_7303582802215372833[227] = 0;
   out_7303582802215372833[228] = 0;
   out_7303582802215372833[229] = 0;
   out_7303582802215372833[230] = 0;
   out_7303582802215372833[231] = 0;
   out_7303582802215372833[232] = 0;
   out_7303582802215372833[233] = 0;
   out_7303582802215372833[234] = 0;
   out_7303582802215372833[235] = 0;
   out_7303582802215372833[236] = 0;
   out_7303582802215372833[237] = 0;
   out_7303582802215372833[238] = 0;
   out_7303582802215372833[239] = 0;
   out_7303582802215372833[240] = 0;
   out_7303582802215372833[241] = 0;
   out_7303582802215372833[242] = 1;
   out_7303582802215372833[243] = 0;
   out_7303582802215372833[244] = 0;
   out_7303582802215372833[245] = 0;
   out_7303582802215372833[246] = 0;
   out_7303582802215372833[247] = 0;
   out_7303582802215372833[248] = 0;
   out_7303582802215372833[249] = 0;
   out_7303582802215372833[250] = 0;
   out_7303582802215372833[251] = 0;
   out_7303582802215372833[252] = 0;
   out_7303582802215372833[253] = 0;
   out_7303582802215372833[254] = 0;
   out_7303582802215372833[255] = 0;
   out_7303582802215372833[256] = 0;
   out_7303582802215372833[257] = 0;
   out_7303582802215372833[258] = 0;
   out_7303582802215372833[259] = 0;
   out_7303582802215372833[260] = 0;
   out_7303582802215372833[261] = 0;
   out_7303582802215372833[262] = 0;
   out_7303582802215372833[263] = 0;
   out_7303582802215372833[264] = 1;
   out_7303582802215372833[265] = 0;
   out_7303582802215372833[266] = 0;
   out_7303582802215372833[267] = 0;
   out_7303582802215372833[268] = 0;
   out_7303582802215372833[269] = 0;
   out_7303582802215372833[270] = 0;
   out_7303582802215372833[271] = 0;
   out_7303582802215372833[272] = 0;
   out_7303582802215372833[273] = 0;
   out_7303582802215372833[274] = 0;
   out_7303582802215372833[275] = 0;
   out_7303582802215372833[276] = 0;
   out_7303582802215372833[277] = 0;
   out_7303582802215372833[278] = 0;
   out_7303582802215372833[279] = 0;
   out_7303582802215372833[280] = 0;
   out_7303582802215372833[281] = 0;
   out_7303582802215372833[282] = 0;
   out_7303582802215372833[283] = 0;
   out_7303582802215372833[284] = 0;
   out_7303582802215372833[285] = 0;
   out_7303582802215372833[286] = 1;
   out_7303582802215372833[287] = 0;
   out_7303582802215372833[288] = 0;
   out_7303582802215372833[289] = 0;
   out_7303582802215372833[290] = 0;
   out_7303582802215372833[291] = 0;
   out_7303582802215372833[292] = 0;
   out_7303582802215372833[293] = 0;
   out_7303582802215372833[294] = 0;
   out_7303582802215372833[295] = 0;
   out_7303582802215372833[296] = 0;
   out_7303582802215372833[297] = 0;
   out_7303582802215372833[298] = 0;
   out_7303582802215372833[299] = 0;
   out_7303582802215372833[300] = 0;
   out_7303582802215372833[301] = 0;
   out_7303582802215372833[302] = 0;
   out_7303582802215372833[303] = 0;
   out_7303582802215372833[304] = 0;
   out_7303582802215372833[305] = 0;
   out_7303582802215372833[306] = 0;
   out_7303582802215372833[307] = 0;
   out_7303582802215372833[308] = 1;
   out_7303582802215372833[309] = 0;
   out_7303582802215372833[310] = 0;
   out_7303582802215372833[311] = 0;
   out_7303582802215372833[312] = 0;
   out_7303582802215372833[313] = 0;
   out_7303582802215372833[314] = 0;
   out_7303582802215372833[315] = 0;
   out_7303582802215372833[316] = 0;
   out_7303582802215372833[317] = 0;
   out_7303582802215372833[318] = 0;
   out_7303582802215372833[319] = 0;
   out_7303582802215372833[320] = 0;
   out_7303582802215372833[321] = 0;
   out_7303582802215372833[322] = 0;
   out_7303582802215372833[323] = 0;
   out_7303582802215372833[324] = 0;
   out_7303582802215372833[325] = 0;
   out_7303582802215372833[326] = 0;
   out_7303582802215372833[327] = 0;
   out_7303582802215372833[328] = 0;
   out_7303582802215372833[329] = 0;
   out_7303582802215372833[330] = 1;
   out_7303582802215372833[331] = 0;
   out_7303582802215372833[332] = 0;
   out_7303582802215372833[333] = 0;
   out_7303582802215372833[334] = 0;
   out_7303582802215372833[335] = 0;
   out_7303582802215372833[336] = 0;
   out_7303582802215372833[337] = 0;
   out_7303582802215372833[338] = 0;
   out_7303582802215372833[339] = 0;
   out_7303582802215372833[340] = 0;
   out_7303582802215372833[341] = 0;
   out_7303582802215372833[342] = 0;
   out_7303582802215372833[343] = 0;
   out_7303582802215372833[344] = 0;
   out_7303582802215372833[345] = 0;
   out_7303582802215372833[346] = 0;
   out_7303582802215372833[347] = 0;
   out_7303582802215372833[348] = 0;
   out_7303582802215372833[349] = 0;
   out_7303582802215372833[350] = 0;
   out_7303582802215372833[351] = 0;
   out_7303582802215372833[352] = 1;
   out_7303582802215372833[353] = 0;
   out_7303582802215372833[354] = 0;
   out_7303582802215372833[355] = 0;
   out_7303582802215372833[356] = 0;
   out_7303582802215372833[357] = 0;
   out_7303582802215372833[358] = 0;
   out_7303582802215372833[359] = 0;
   out_7303582802215372833[360] = 0;
   out_7303582802215372833[361] = 0;
   out_7303582802215372833[362] = 0;
   out_7303582802215372833[363] = 0;
   out_7303582802215372833[364] = 0;
   out_7303582802215372833[365] = 0;
   out_7303582802215372833[366] = 0;
   out_7303582802215372833[367] = 0;
   out_7303582802215372833[368] = 0;
   out_7303582802215372833[369] = 0;
   out_7303582802215372833[370] = 0;
   out_7303582802215372833[371] = 0;
   out_7303582802215372833[372] = 0;
   out_7303582802215372833[373] = 0;
   out_7303582802215372833[374] = 1;
   out_7303582802215372833[375] = 0;
   out_7303582802215372833[376] = 0;
   out_7303582802215372833[377] = 0;
   out_7303582802215372833[378] = 0;
   out_7303582802215372833[379] = 0;
   out_7303582802215372833[380] = 0;
   out_7303582802215372833[381] = 0;
   out_7303582802215372833[382] = 0;
   out_7303582802215372833[383] = 0;
   out_7303582802215372833[384] = 0;
   out_7303582802215372833[385] = 0;
   out_7303582802215372833[386] = 0;
   out_7303582802215372833[387] = 0;
   out_7303582802215372833[388] = 0;
   out_7303582802215372833[389] = 0;
   out_7303582802215372833[390] = 0;
   out_7303582802215372833[391] = 0;
   out_7303582802215372833[392] = 0;
   out_7303582802215372833[393] = 0;
   out_7303582802215372833[394] = 0;
   out_7303582802215372833[395] = 0;
   out_7303582802215372833[396] = 1;
   out_7303582802215372833[397] = 0;
   out_7303582802215372833[398] = 0;
   out_7303582802215372833[399] = 0;
   out_7303582802215372833[400] = 0;
   out_7303582802215372833[401] = 0;
   out_7303582802215372833[402] = 0;
   out_7303582802215372833[403] = 0;
   out_7303582802215372833[404] = 0;
   out_7303582802215372833[405] = 0;
   out_7303582802215372833[406] = 0;
   out_7303582802215372833[407] = 0;
   out_7303582802215372833[408] = 0;
   out_7303582802215372833[409] = 0;
   out_7303582802215372833[410] = 0;
   out_7303582802215372833[411] = 0;
   out_7303582802215372833[412] = 0;
   out_7303582802215372833[413] = 0;
   out_7303582802215372833[414] = 0;
   out_7303582802215372833[415] = 0;
   out_7303582802215372833[416] = 0;
   out_7303582802215372833[417] = 0;
   out_7303582802215372833[418] = 1;
   out_7303582802215372833[419] = 0;
   out_7303582802215372833[420] = 0;
   out_7303582802215372833[421] = 0;
   out_7303582802215372833[422] = 0;
   out_7303582802215372833[423] = 0;
   out_7303582802215372833[424] = 0;
   out_7303582802215372833[425] = 0;
   out_7303582802215372833[426] = 0;
   out_7303582802215372833[427] = 0;
   out_7303582802215372833[428] = 0;
   out_7303582802215372833[429] = 0;
   out_7303582802215372833[430] = 0;
   out_7303582802215372833[431] = 0;
   out_7303582802215372833[432] = 0;
   out_7303582802215372833[433] = 0;
   out_7303582802215372833[434] = 0;
   out_7303582802215372833[435] = 0;
   out_7303582802215372833[436] = 0;
   out_7303582802215372833[437] = 0;
   out_7303582802215372833[438] = 0;
   out_7303582802215372833[439] = 0;
   out_7303582802215372833[440] = 1;
}
void h_4(double *state, double *unused, double *out_4618606153516215947) {
   out_4618606153516215947[0] = state[10] + state[13];
   out_4618606153516215947[1] = state[11] + state[14];
   out_4618606153516215947[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2869943118884432623) {
   out_2869943118884432623[0] = 0;
   out_2869943118884432623[1] = 0;
   out_2869943118884432623[2] = 0;
   out_2869943118884432623[3] = 0;
   out_2869943118884432623[4] = 0;
   out_2869943118884432623[5] = 0;
   out_2869943118884432623[6] = 0;
   out_2869943118884432623[7] = 0;
   out_2869943118884432623[8] = 0;
   out_2869943118884432623[9] = 0;
   out_2869943118884432623[10] = 1;
   out_2869943118884432623[11] = 0;
   out_2869943118884432623[12] = 0;
   out_2869943118884432623[13] = 1;
   out_2869943118884432623[14] = 0;
   out_2869943118884432623[15] = 0;
   out_2869943118884432623[16] = 0;
   out_2869943118884432623[17] = 0;
   out_2869943118884432623[18] = 0;
   out_2869943118884432623[19] = 0;
   out_2869943118884432623[20] = 0;
   out_2869943118884432623[21] = 0;
   out_2869943118884432623[22] = 0;
   out_2869943118884432623[23] = 0;
   out_2869943118884432623[24] = 0;
   out_2869943118884432623[25] = 0;
   out_2869943118884432623[26] = 0;
   out_2869943118884432623[27] = 0;
   out_2869943118884432623[28] = 0;
   out_2869943118884432623[29] = 0;
   out_2869943118884432623[30] = 0;
   out_2869943118884432623[31] = 0;
   out_2869943118884432623[32] = 0;
   out_2869943118884432623[33] = 1;
   out_2869943118884432623[34] = 0;
   out_2869943118884432623[35] = 0;
   out_2869943118884432623[36] = 1;
   out_2869943118884432623[37] = 0;
   out_2869943118884432623[38] = 0;
   out_2869943118884432623[39] = 0;
   out_2869943118884432623[40] = 0;
   out_2869943118884432623[41] = 0;
   out_2869943118884432623[42] = 0;
   out_2869943118884432623[43] = 0;
   out_2869943118884432623[44] = 0;
   out_2869943118884432623[45] = 0;
   out_2869943118884432623[46] = 0;
   out_2869943118884432623[47] = 0;
   out_2869943118884432623[48] = 0;
   out_2869943118884432623[49] = 0;
   out_2869943118884432623[50] = 0;
   out_2869943118884432623[51] = 0;
   out_2869943118884432623[52] = 0;
   out_2869943118884432623[53] = 0;
   out_2869943118884432623[54] = 0;
   out_2869943118884432623[55] = 0;
   out_2869943118884432623[56] = 1;
   out_2869943118884432623[57] = 0;
   out_2869943118884432623[58] = 0;
   out_2869943118884432623[59] = 1;
   out_2869943118884432623[60] = 0;
   out_2869943118884432623[61] = 0;
   out_2869943118884432623[62] = 0;
   out_2869943118884432623[63] = 0;
   out_2869943118884432623[64] = 0;
   out_2869943118884432623[65] = 0;
}
void h_9(double *state, double *unused, double *out_8434652701568218375) {
   out_8434652701568218375[0] = state[10];
   out_8434652701568218375[1] = state[11];
   out_8434652701568218375[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3111132765514023268) {
   out_3111132765514023268[0] = 0;
   out_3111132765514023268[1] = 0;
   out_3111132765514023268[2] = 0;
   out_3111132765514023268[3] = 0;
   out_3111132765514023268[4] = 0;
   out_3111132765514023268[5] = 0;
   out_3111132765514023268[6] = 0;
   out_3111132765514023268[7] = 0;
   out_3111132765514023268[8] = 0;
   out_3111132765514023268[9] = 0;
   out_3111132765514023268[10] = 1;
   out_3111132765514023268[11] = 0;
   out_3111132765514023268[12] = 0;
   out_3111132765514023268[13] = 0;
   out_3111132765514023268[14] = 0;
   out_3111132765514023268[15] = 0;
   out_3111132765514023268[16] = 0;
   out_3111132765514023268[17] = 0;
   out_3111132765514023268[18] = 0;
   out_3111132765514023268[19] = 0;
   out_3111132765514023268[20] = 0;
   out_3111132765514023268[21] = 0;
   out_3111132765514023268[22] = 0;
   out_3111132765514023268[23] = 0;
   out_3111132765514023268[24] = 0;
   out_3111132765514023268[25] = 0;
   out_3111132765514023268[26] = 0;
   out_3111132765514023268[27] = 0;
   out_3111132765514023268[28] = 0;
   out_3111132765514023268[29] = 0;
   out_3111132765514023268[30] = 0;
   out_3111132765514023268[31] = 0;
   out_3111132765514023268[32] = 0;
   out_3111132765514023268[33] = 1;
   out_3111132765514023268[34] = 0;
   out_3111132765514023268[35] = 0;
   out_3111132765514023268[36] = 0;
   out_3111132765514023268[37] = 0;
   out_3111132765514023268[38] = 0;
   out_3111132765514023268[39] = 0;
   out_3111132765514023268[40] = 0;
   out_3111132765514023268[41] = 0;
   out_3111132765514023268[42] = 0;
   out_3111132765514023268[43] = 0;
   out_3111132765514023268[44] = 0;
   out_3111132765514023268[45] = 0;
   out_3111132765514023268[46] = 0;
   out_3111132765514023268[47] = 0;
   out_3111132765514023268[48] = 0;
   out_3111132765514023268[49] = 0;
   out_3111132765514023268[50] = 0;
   out_3111132765514023268[51] = 0;
   out_3111132765514023268[52] = 0;
   out_3111132765514023268[53] = 0;
   out_3111132765514023268[54] = 0;
   out_3111132765514023268[55] = 0;
   out_3111132765514023268[56] = 1;
   out_3111132765514023268[57] = 0;
   out_3111132765514023268[58] = 0;
   out_3111132765514023268[59] = 0;
   out_3111132765514023268[60] = 0;
   out_3111132765514023268[61] = 0;
   out_3111132765514023268[62] = 0;
   out_3111132765514023268[63] = 0;
   out_3111132765514023268[64] = 0;
   out_3111132765514023268[65] = 0;
}
void h_10(double *state, double *unused, double *out_8387767613653762802) {
   out_8387767613653762802[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_8387767613653762802[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_8387767613653762802[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5440438466562031607) {
   out_5440438466562031607[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5440438466562031607[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5440438466562031607[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5440438466562031607[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5440438466562031607[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5440438466562031607[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5440438466562031607[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5440438466562031607[7] = 0;
   out_5440438466562031607[8] = 0;
   out_5440438466562031607[9] = 0;
   out_5440438466562031607[10] = 0;
   out_5440438466562031607[11] = 0;
   out_5440438466562031607[12] = 0;
   out_5440438466562031607[13] = 0;
   out_5440438466562031607[14] = 0;
   out_5440438466562031607[15] = 0;
   out_5440438466562031607[16] = 1;
   out_5440438466562031607[17] = 0;
   out_5440438466562031607[18] = 0;
   out_5440438466562031607[19] = 1;
   out_5440438466562031607[20] = 0;
   out_5440438466562031607[21] = 0;
   out_5440438466562031607[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5440438466562031607[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5440438466562031607[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5440438466562031607[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5440438466562031607[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5440438466562031607[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5440438466562031607[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5440438466562031607[29] = 0;
   out_5440438466562031607[30] = 0;
   out_5440438466562031607[31] = 0;
   out_5440438466562031607[32] = 0;
   out_5440438466562031607[33] = 0;
   out_5440438466562031607[34] = 0;
   out_5440438466562031607[35] = 0;
   out_5440438466562031607[36] = 0;
   out_5440438466562031607[37] = 0;
   out_5440438466562031607[38] = 0;
   out_5440438466562031607[39] = 1;
   out_5440438466562031607[40] = 0;
   out_5440438466562031607[41] = 0;
   out_5440438466562031607[42] = 1;
   out_5440438466562031607[43] = 0;
   out_5440438466562031607[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5440438466562031607[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5440438466562031607[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5440438466562031607[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5440438466562031607[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5440438466562031607[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5440438466562031607[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5440438466562031607[51] = 0;
   out_5440438466562031607[52] = 0;
   out_5440438466562031607[53] = 0;
   out_5440438466562031607[54] = 0;
   out_5440438466562031607[55] = 0;
   out_5440438466562031607[56] = 0;
   out_5440438466562031607[57] = 0;
   out_5440438466562031607[58] = 0;
   out_5440438466562031607[59] = 0;
   out_5440438466562031607[60] = 0;
   out_5440438466562031607[61] = 0;
   out_5440438466562031607[62] = 1;
   out_5440438466562031607[63] = 0;
   out_5440438466562031607[64] = 0;
   out_5440438466562031607[65] = 1;
}
void h_12(double *state, double *unused, double *out_5528931727572573892) {
   out_5528931727572573892[0] = state[0];
   out_5528931727572573892[1] = state[1];
   out_5528931727572573892[2] = state[2];
}
void H_12(double *state, double *unused, double *out_7889399526916394418) {
   out_7889399526916394418[0] = 1;
   out_7889399526916394418[1] = 0;
   out_7889399526916394418[2] = 0;
   out_7889399526916394418[3] = 0;
   out_7889399526916394418[4] = 0;
   out_7889399526916394418[5] = 0;
   out_7889399526916394418[6] = 0;
   out_7889399526916394418[7] = 0;
   out_7889399526916394418[8] = 0;
   out_7889399526916394418[9] = 0;
   out_7889399526916394418[10] = 0;
   out_7889399526916394418[11] = 0;
   out_7889399526916394418[12] = 0;
   out_7889399526916394418[13] = 0;
   out_7889399526916394418[14] = 0;
   out_7889399526916394418[15] = 0;
   out_7889399526916394418[16] = 0;
   out_7889399526916394418[17] = 0;
   out_7889399526916394418[18] = 0;
   out_7889399526916394418[19] = 0;
   out_7889399526916394418[20] = 0;
   out_7889399526916394418[21] = 0;
   out_7889399526916394418[22] = 0;
   out_7889399526916394418[23] = 1;
   out_7889399526916394418[24] = 0;
   out_7889399526916394418[25] = 0;
   out_7889399526916394418[26] = 0;
   out_7889399526916394418[27] = 0;
   out_7889399526916394418[28] = 0;
   out_7889399526916394418[29] = 0;
   out_7889399526916394418[30] = 0;
   out_7889399526916394418[31] = 0;
   out_7889399526916394418[32] = 0;
   out_7889399526916394418[33] = 0;
   out_7889399526916394418[34] = 0;
   out_7889399526916394418[35] = 0;
   out_7889399526916394418[36] = 0;
   out_7889399526916394418[37] = 0;
   out_7889399526916394418[38] = 0;
   out_7889399526916394418[39] = 0;
   out_7889399526916394418[40] = 0;
   out_7889399526916394418[41] = 0;
   out_7889399526916394418[42] = 0;
   out_7889399526916394418[43] = 0;
   out_7889399526916394418[44] = 0;
   out_7889399526916394418[45] = 0;
   out_7889399526916394418[46] = 1;
   out_7889399526916394418[47] = 0;
   out_7889399526916394418[48] = 0;
   out_7889399526916394418[49] = 0;
   out_7889399526916394418[50] = 0;
   out_7889399526916394418[51] = 0;
   out_7889399526916394418[52] = 0;
   out_7889399526916394418[53] = 0;
   out_7889399526916394418[54] = 0;
   out_7889399526916394418[55] = 0;
   out_7889399526916394418[56] = 0;
   out_7889399526916394418[57] = 0;
   out_7889399526916394418[58] = 0;
   out_7889399526916394418[59] = 0;
   out_7889399526916394418[60] = 0;
   out_7889399526916394418[61] = 0;
   out_7889399526916394418[62] = 0;
   out_7889399526916394418[63] = 0;
   out_7889399526916394418[64] = 0;
   out_7889399526916394418[65] = 0;
}
void h_35(double *state, double *unused, double *out_4128968949380736912) {
   out_4128968949380736912[0] = state[7];
   out_4128968949380736912[1] = state[8];
   out_4128968949380736912[2] = state[9];
}
void H_35(double *state, double *unused, double *out_7811781514468143489) {
   out_7811781514468143489[0] = 0;
   out_7811781514468143489[1] = 0;
   out_7811781514468143489[2] = 0;
   out_7811781514468143489[3] = 0;
   out_7811781514468143489[4] = 0;
   out_7811781514468143489[5] = 0;
   out_7811781514468143489[6] = 0;
   out_7811781514468143489[7] = 1;
   out_7811781514468143489[8] = 0;
   out_7811781514468143489[9] = 0;
   out_7811781514468143489[10] = 0;
   out_7811781514468143489[11] = 0;
   out_7811781514468143489[12] = 0;
   out_7811781514468143489[13] = 0;
   out_7811781514468143489[14] = 0;
   out_7811781514468143489[15] = 0;
   out_7811781514468143489[16] = 0;
   out_7811781514468143489[17] = 0;
   out_7811781514468143489[18] = 0;
   out_7811781514468143489[19] = 0;
   out_7811781514468143489[20] = 0;
   out_7811781514468143489[21] = 0;
   out_7811781514468143489[22] = 0;
   out_7811781514468143489[23] = 0;
   out_7811781514468143489[24] = 0;
   out_7811781514468143489[25] = 0;
   out_7811781514468143489[26] = 0;
   out_7811781514468143489[27] = 0;
   out_7811781514468143489[28] = 0;
   out_7811781514468143489[29] = 0;
   out_7811781514468143489[30] = 1;
   out_7811781514468143489[31] = 0;
   out_7811781514468143489[32] = 0;
   out_7811781514468143489[33] = 0;
   out_7811781514468143489[34] = 0;
   out_7811781514468143489[35] = 0;
   out_7811781514468143489[36] = 0;
   out_7811781514468143489[37] = 0;
   out_7811781514468143489[38] = 0;
   out_7811781514468143489[39] = 0;
   out_7811781514468143489[40] = 0;
   out_7811781514468143489[41] = 0;
   out_7811781514468143489[42] = 0;
   out_7811781514468143489[43] = 0;
   out_7811781514468143489[44] = 0;
   out_7811781514468143489[45] = 0;
   out_7811781514468143489[46] = 0;
   out_7811781514468143489[47] = 0;
   out_7811781514468143489[48] = 0;
   out_7811781514468143489[49] = 0;
   out_7811781514468143489[50] = 0;
   out_7811781514468143489[51] = 0;
   out_7811781514468143489[52] = 0;
   out_7811781514468143489[53] = 1;
   out_7811781514468143489[54] = 0;
   out_7811781514468143489[55] = 0;
   out_7811781514468143489[56] = 0;
   out_7811781514468143489[57] = 0;
   out_7811781514468143489[58] = 0;
   out_7811781514468143489[59] = 0;
   out_7811781514468143489[60] = 0;
   out_7811781514468143489[61] = 0;
   out_7811781514468143489[62] = 0;
   out_7811781514468143489[63] = 0;
   out_7811781514468143489[64] = 0;
   out_7811781514468143489[65] = 0;
}
void h_32(double *state, double *unused, double *out_1037016206198413416) {
   out_1037016206198413416[0] = state[3];
   out_1037016206198413416[1] = state[4];
   out_1037016206198413416[2] = state[5];
   out_1037016206198413416[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2010477142260530931) {
   out_2010477142260530931[0] = 0;
   out_2010477142260530931[1] = 0;
   out_2010477142260530931[2] = 0;
   out_2010477142260530931[3] = 1;
   out_2010477142260530931[4] = 0;
   out_2010477142260530931[5] = 0;
   out_2010477142260530931[6] = 0;
   out_2010477142260530931[7] = 0;
   out_2010477142260530931[8] = 0;
   out_2010477142260530931[9] = 0;
   out_2010477142260530931[10] = 0;
   out_2010477142260530931[11] = 0;
   out_2010477142260530931[12] = 0;
   out_2010477142260530931[13] = 0;
   out_2010477142260530931[14] = 0;
   out_2010477142260530931[15] = 0;
   out_2010477142260530931[16] = 0;
   out_2010477142260530931[17] = 0;
   out_2010477142260530931[18] = 0;
   out_2010477142260530931[19] = 0;
   out_2010477142260530931[20] = 0;
   out_2010477142260530931[21] = 0;
   out_2010477142260530931[22] = 0;
   out_2010477142260530931[23] = 0;
   out_2010477142260530931[24] = 0;
   out_2010477142260530931[25] = 0;
   out_2010477142260530931[26] = 1;
   out_2010477142260530931[27] = 0;
   out_2010477142260530931[28] = 0;
   out_2010477142260530931[29] = 0;
   out_2010477142260530931[30] = 0;
   out_2010477142260530931[31] = 0;
   out_2010477142260530931[32] = 0;
   out_2010477142260530931[33] = 0;
   out_2010477142260530931[34] = 0;
   out_2010477142260530931[35] = 0;
   out_2010477142260530931[36] = 0;
   out_2010477142260530931[37] = 0;
   out_2010477142260530931[38] = 0;
   out_2010477142260530931[39] = 0;
   out_2010477142260530931[40] = 0;
   out_2010477142260530931[41] = 0;
   out_2010477142260530931[42] = 0;
   out_2010477142260530931[43] = 0;
   out_2010477142260530931[44] = 0;
   out_2010477142260530931[45] = 0;
   out_2010477142260530931[46] = 0;
   out_2010477142260530931[47] = 0;
   out_2010477142260530931[48] = 0;
   out_2010477142260530931[49] = 1;
   out_2010477142260530931[50] = 0;
   out_2010477142260530931[51] = 0;
   out_2010477142260530931[52] = 0;
   out_2010477142260530931[53] = 0;
   out_2010477142260530931[54] = 0;
   out_2010477142260530931[55] = 0;
   out_2010477142260530931[56] = 0;
   out_2010477142260530931[57] = 0;
   out_2010477142260530931[58] = 0;
   out_2010477142260530931[59] = 0;
   out_2010477142260530931[60] = 0;
   out_2010477142260530931[61] = 0;
   out_2010477142260530931[62] = 0;
   out_2010477142260530931[63] = 0;
   out_2010477142260530931[64] = 0;
   out_2010477142260530931[65] = 0;
   out_2010477142260530931[66] = 0;
   out_2010477142260530931[67] = 0;
   out_2010477142260530931[68] = 0;
   out_2010477142260530931[69] = 0;
   out_2010477142260530931[70] = 0;
   out_2010477142260530931[71] = 0;
   out_2010477142260530931[72] = 1;
   out_2010477142260530931[73] = 0;
   out_2010477142260530931[74] = 0;
   out_2010477142260530931[75] = 0;
   out_2010477142260530931[76] = 0;
   out_2010477142260530931[77] = 0;
   out_2010477142260530931[78] = 0;
   out_2010477142260530931[79] = 0;
   out_2010477142260530931[80] = 0;
   out_2010477142260530931[81] = 0;
   out_2010477142260530931[82] = 0;
   out_2010477142260530931[83] = 0;
   out_2010477142260530931[84] = 0;
   out_2010477142260530931[85] = 0;
   out_2010477142260530931[86] = 0;
   out_2010477142260530931[87] = 0;
}
void h_13(double *state, double *unused, double *out_3929842276086482884) {
   out_3929842276086482884[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_3929842276086482884[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_3929842276086482884[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_8738577330018849522) {
   out_8738577330018849522[0] = 0;
   out_8738577330018849522[1] = 0;
   out_8738577330018849522[2] = 0;
   out_8738577330018849522[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8738577330018849522[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8738577330018849522[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_8738577330018849522[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8738577330018849522[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_8738577330018849522[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_8738577330018849522[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_8738577330018849522[10] = 0;
   out_8738577330018849522[11] = 0;
   out_8738577330018849522[12] = 0;
   out_8738577330018849522[13] = 0;
   out_8738577330018849522[14] = 0;
   out_8738577330018849522[15] = 0;
   out_8738577330018849522[16] = 0;
   out_8738577330018849522[17] = 0;
   out_8738577330018849522[18] = 0;
   out_8738577330018849522[19] = 0;
   out_8738577330018849522[20] = 0;
   out_8738577330018849522[21] = 0;
   out_8738577330018849522[22] = 0;
   out_8738577330018849522[23] = 0;
   out_8738577330018849522[24] = 0;
   out_8738577330018849522[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_8738577330018849522[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8738577330018849522[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8738577330018849522[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_8738577330018849522[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_8738577330018849522[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_8738577330018849522[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_8738577330018849522[32] = 0;
   out_8738577330018849522[33] = 0;
   out_8738577330018849522[34] = 0;
   out_8738577330018849522[35] = 0;
   out_8738577330018849522[36] = 0;
   out_8738577330018849522[37] = 0;
   out_8738577330018849522[38] = 0;
   out_8738577330018849522[39] = 0;
   out_8738577330018849522[40] = 0;
   out_8738577330018849522[41] = 0;
   out_8738577330018849522[42] = 0;
   out_8738577330018849522[43] = 0;
   out_8738577330018849522[44] = 0;
   out_8738577330018849522[45] = 0;
   out_8738577330018849522[46] = 0;
   out_8738577330018849522[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_8738577330018849522[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_8738577330018849522[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_8738577330018849522[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_8738577330018849522[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_8738577330018849522[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_8738577330018849522[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_8738577330018849522[54] = 0;
   out_8738577330018849522[55] = 0;
   out_8738577330018849522[56] = 0;
   out_8738577330018849522[57] = 0;
   out_8738577330018849522[58] = 0;
   out_8738577330018849522[59] = 0;
   out_8738577330018849522[60] = 0;
   out_8738577330018849522[61] = 0;
   out_8738577330018849522[62] = 0;
   out_8738577330018849522[63] = 0;
   out_8738577330018849522[64] = 0;
   out_8738577330018849522[65] = 0;
}
void h_14(double *state, double *unused, double *out_8434652701568218375) {
   out_8434652701568218375[0] = state[10];
   out_8434652701568218375[1] = state[11];
   out_8434652701568218375[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3111132765514023268) {
   out_3111132765514023268[0] = 0;
   out_3111132765514023268[1] = 0;
   out_3111132765514023268[2] = 0;
   out_3111132765514023268[3] = 0;
   out_3111132765514023268[4] = 0;
   out_3111132765514023268[5] = 0;
   out_3111132765514023268[6] = 0;
   out_3111132765514023268[7] = 0;
   out_3111132765514023268[8] = 0;
   out_3111132765514023268[9] = 0;
   out_3111132765514023268[10] = 1;
   out_3111132765514023268[11] = 0;
   out_3111132765514023268[12] = 0;
   out_3111132765514023268[13] = 0;
   out_3111132765514023268[14] = 0;
   out_3111132765514023268[15] = 0;
   out_3111132765514023268[16] = 0;
   out_3111132765514023268[17] = 0;
   out_3111132765514023268[18] = 0;
   out_3111132765514023268[19] = 0;
   out_3111132765514023268[20] = 0;
   out_3111132765514023268[21] = 0;
   out_3111132765514023268[22] = 0;
   out_3111132765514023268[23] = 0;
   out_3111132765514023268[24] = 0;
   out_3111132765514023268[25] = 0;
   out_3111132765514023268[26] = 0;
   out_3111132765514023268[27] = 0;
   out_3111132765514023268[28] = 0;
   out_3111132765514023268[29] = 0;
   out_3111132765514023268[30] = 0;
   out_3111132765514023268[31] = 0;
   out_3111132765514023268[32] = 0;
   out_3111132765514023268[33] = 1;
   out_3111132765514023268[34] = 0;
   out_3111132765514023268[35] = 0;
   out_3111132765514023268[36] = 0;
   out_3111132765514023268[37] = 0;
   out_3111132765514023268[38] = 0;
   out_3111132765514023268[39] = 0;
   out_3111132765514023268[40] = 0;
   out_3111132765514023268[41] = 0;
   out_3111132765514023268[42] = 0;
   out_3111132765514023268[43] = 0;
   out_3111132765514023268[44] = 0;
   out_3111132765514023268[45] = 0;
   out_3111132765514023268[46] = 0;
   out_3111132765514023268[47] = 0;
   out_3111132765514023268[48] = 0;
   out_3111132765514023268[49] = 0;
   out_3111132765514023268[50] = 0;
   out_3111132765514023268[51] = 0;
   out_3111132765514023268[52] = 0;
   out_3111132765514023268[53] = 0;
   out_3111132765514023268[54] = 0;
   out_3111132765514023268[55] = 0;
   out_3111132765514023268[56] = 1;
   out_3111132765514023268[57] = 0;
   out_3111132765514023268[58] = 0;
   out_3111132765514023268[59] = 0;
   out_3111132765514023268[60] = 0;
   out_3111132765514023268[61] = 0;
   out_3111132765514023268[62] = 0;
   out_3111132765514023268[63] = 0;
   out_3111132765514023268[64] = 0;
   out_3111132765514023268[65] = 0;
}
void h_33(double *state, double *unused, double *out_2180366763639033166) {
   out_2180366763639033166[0] = state[16];
   out_2180366763639033166[1] = state[17];
   out_2180366763639033166[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4661224509829285885) {
   out_4661224509829285885[0] = 0;
   out_4661224509829285885[1] = 0;
   out_4661224509829285885[2] = 0;
   out_4661224509829285885[3] = 0;
   out_4661224509829285885[4] = 0;
   out_4661224509829285885[5] = 0;
   out_4661224509829285885[6] = 0;
   out_4661224509829285885[7] = 0;
   out_4661224509829285885[8] = 0;
   out_4661224509829285885[9] = 0;
   out_4661224509829285885[10] = 0;
   out_4661224509829285885[11] = 0;
   out_4661224509829285885[12] = 0;
   out_4661224509829285885[13] = 0;
   out_4661224509829285885[14] = 0;
   out_4661224509829285885[15] = 0;
   out_4661224509829285885[16] = 1;
   out_4661224509829285885[17] = 0;
   out_4661224509829285885[18] = 0;
   out_4661224509829285885[19] = 0;
   out_4661224509829285885[20] = 0;
   out_4661224509829285885[21] = 0;
   out_4661224509829285885[22] = 0;
   out_4661224509829285885[23] = 0;
   out_4661224509829285885[24] = 0;
   out_4661224509829285885[25] = 0;
   out_4661224509829285885[26] = 0;
   out_4661224509829285885[27] = 0;
   out_4661224509829285885[28] = 0;
   out_4661224509829285885[29] = 0;
   out_4661224509829285885[30] = 0;
   out_4661224509829285885[31] = 0;
   out_4661224509829285885[32] = 0;
   out_4661224509829285885[33] = 0;
   out_4661224509829285885[34] = 0;
   out_4661224509829285885[35] = 0;
   out_4661224509829285885[36] = 0;
   out_4661224509829285885[37] = 0;
   out_4661224509829285885[38] = 0;
   out_4661224509829285885[39] = 1;
   out_4661224509829285885[40] = 0;
   out_4661224509829285885[41] = 0;
   out_4661224509829285885[42] = 0;
   out_4661224509829285885[43] = 0;
   out_4661224509829285885[44] = 0;
   out_4661224509829285885[45] = 0;
   out_4661224509829285885[46] = 0;
   out_4661224509829285885[47] = 0;
   out_4661224509829285885[48] = 0;
   out_4661224509829285885[49] = 0;
   out_4661224509829285885[50] = 0;
   out_4661224509829285885[51] = 0;
   out_4661224509829285885[52] = 0;
   out_4661224509829285885[53] = 0;
   out_4661224509829285885[54] = 0;
   out_4661224509829285885[55] = 0;
   out_4661224509829285885[56] = 0;
   out_4661224509829285885[57] = 0;
   out_4661224509829285885[58] = 0;
   out_4661224509829285885[59] = 0;
   out_4661224509829285885[60] = 0;
   out_4661224509829285885[61] = 0;
   out_4661224509829285885[62] = 1;
   out_4661224509829285885[63] = 0;
   out_4661224509829285885[64] = 0;
   out_4661224509829285885[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_622721346943683685) {
  H(in_vec, out_622721346943683685);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_773547643175572684) {
  err_fun(nom_x, delta_x, out_773547643175572684);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5115024931453247445) {
  inv_err_fun(nom_x, true_x, out_5115024931453247445);
}
void live_H_mod_fun(double *state, double *out_2117137093686112568) {
  H_mod_fun(state, out_2117137093686112568);
}
void live_f_fun(double *state, double dt, double *out_3393411830256892093) {
  f_fun(state,  dt, out_3393411830256892093);
}
void live_F_fun(double *state, double dt, double *out_7303582802215372833) {
  F_fun(state,  dt, out_7303582802215372833);
}
void live_h_4(double *state, double *unused, double *out_4618606153516215947) {
  h_4(state, unused, out_4618606153516215947);
}
void live_H_4(double *state, double *unused, double *out_2869943118884432623) {
  H_4(state, unused, out_2869943118884432623);
}
void live_h_9(double *state, double *unused, double *out_8434652701568218375) {
  h_9(state, unused, out_8434652701568218375);
}
void live_H_9(double *state, double *unused, double *out_3111132765514023268) {
  H_9(state, unused, out_3111132765514023268);
}
void live_h_10(double *state, double *unused, double *out_8387767613653762802) {
  h_10(state, unused, out_8387767613653762802);
}
void live_H_10(double *state, double *unused, double *out_5440438466562031607) {
  H_10(state, unused, out_5440438466562031607);
}
void live_h_12(double *state, double *unused, double *out_5528931727572573892) {
  h_12(state, unused, out_5528931727572573892);
}
void live_H_12(double *state, double *unused, double *out_7889399526916394418) {
  H_12(state, unused, out_7889399526916394418);
}
void live_h_35(double *state, double *unused, double *out_4128968949380736912) {
  h_35(state, unused, out_4128968949380736912);
}
void live_H_35(double *state, double *unused, double *out_7811781514468143489) {
  H_35(state, unused, out_7811781514468143489);
}
void live_h_32(double *state, double *unused, double *out_1037016206198413416) {
  h_32(state, unused, out_1037016206198413416);
}
void live_H_32(double *state, double *unused, double *out_2010477142260530931) {
  H_32(state, unused, out_2010477142260530931);
}
void live_h_13(double *state, double *unused, double *out_3929842276086482884) {
  h_13(state, unused, out_3929842276086482884);
}
void live_H_13(double *state, double *unused, double *out_8738577330018849522) {
  H_13(state, unused, out_8738577330018849522);
}
void live_h_14(double *state, double *unused, double *out_8434652701568218375) {
  h_14(state, unused, out_8434652701568218375);
}
void live_H_14(double *state, double *unused, double *out_3111132765514023268) {
  H_14(state, unused, out_3111132765514023268);
}
void live_h_33(double *state, double *unused, double *out_2180366763639033166) {
  h_33(state, unused, out_2180366763639033166);
}
void live_H_33(double *state, double *unused, double *out_4661224509829285885) {
  H_33(state, unused, out_4661224509829285885);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
